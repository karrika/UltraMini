// Atari 7800 SUPERCART is a basic cart with no ROM bank at $4000-$7FFF
// The last bank N at C000 is fixed
//
// The maximum number of banks is 32 (N = 31)
//
// corresponding to a 512k game
//
// But to get this to work you need to cut two traces on the PCB.
//
// this configuration has
//
// - a wire between pin 1 and pin 22 (CLK = write to area 8000..BFFF)
//   This latches data pins D0, D1, D2, D3, D4
//   to outputs BA14, BA15, BA16, BA17, BA18
//
// - a wire between pins 21 and 19. (cut)
//   this tied two outputs together. It won't work.
//
// - a wire between pins 13 and 15. (cut)
//   This is the Bank select output. If it is zero it will disable the chip
//   and the resistor pull all address pins high allowing the high
//   bank N-1 to appear on C000 .. FFFF
//
//   The pins 1, 4, 20 and 23 are outputs for the 74LS02
//
//   When using a 74LS02 solder switches W1 and W2
//   When using a GAL chip solder switches W8 and W9
//
// - P_7 is GND
// These wires exists on the mini-ultra pcb

// Pin 14 to 23 may be ouputs. Rest are inputs.

chip 20V8R;   // 20V8R

pin  1 CLK;   pin 24 VCC;
pin  2 RW;    pin 23 D5;
pin  3 CLK2;  pin 22 !WR;
pin  4 D4;    pin 21 ZA14;
pin  5 A14;   pin 20 !ROMCS;
pin  6 A15;   pin 19 BA14;
pin  7 P_7;   pin 18 BA15;
pin  8 D3;    pin 17 BA16;
pin  9 D0;    pin 16 BA17;
pin 10 D1;    pin 15 BA18;
pin 11 D2;    pin 14 BA19;
pin 12 GND;   pin 13 !OE;

// Define bits controlling the bank switching
  BA14 := D0 | !A14;
  BA15 := D1 | !A14;
  BA16 := D2 | !A14;
  BA17 := D3 | !A14;
  BA18 := 1;
  ZA14 := D0 | !A14;

// Set ROMCS for address range 8000-FFFF read
  ROMCS =  A15 &         RW;         // 8000-FFFF read

// Detect write to bankswitch selection
     WR =  A15 & !A14 & !RW & CLK2; // 8000-BFFF write
                                    // This advances the CLK on the chip

// 20V8R needs OE term for non-registered outputs
   ROMCS.OE = 1;
      WR.OE = 1;

// generate automatic test vectors
test ROMCS WR;

// latch test vectors
test [  CLK=C !D0  D1 !D2  OE -> !BA14   BA15  !BA16   ]; // load
test [ !CLK    D0 !D1  D2  OE -> !BA14   BA15  !BA16   ]; // latched
test [  CLK=C  D0 !D1  D2  OE ->  BA14  !BA15   BA16   ]; // load
test [ !CLK   !D0  D1 !D2  OE ->  BA14  !BA15   BA16   ]; // latched
test [  CLK=C !D0  D1 !D2 !OE ->  BA14=Z BA15=Z BA16=Z ]; // load+disable
test [ !CLK    D0 !D1  D2  OE -> !BA14   BA15  !BA16   ]; // latched
